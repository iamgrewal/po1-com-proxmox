[global]
keyboard = "en-us"
country = "us"
fqdn = "pve.po1.me"
domain = "po1.me"
mailto = "proxmox@po1.me"
timezone = "America/Detroit"
root_password = "passw0rd"
reboot_on_error = true
# SSH keys for root user
root_ssh_keys = [
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG+JRLgkEBRWE1TqovJIikP32l5jqXhnAU8yzdta1/Ph Generated By Termius"
]

auto_install = true
reboot_on_error = false


[network]
source = "from-dhcp"
dns = ["8.8.8.8", "8.8.4.4"]


[disk_setup]
# Primary filesystem type to use (ext4 or zfs)
# The script will dynamically choose based on available memory, but this sets the default
target_hd = "/dev/sda"
filesystem = "zfs"

# List of disks to detect and potentially use
# The auto-selection logic prioritizes SSDs > NVMe > HDDs
 
# Primary disk for LVM setup - should match your most performant disk path
# For NVMe drives, use the full path including /dev/
 
# zfs -- Defines ZFS-specific properties. See ZFS Advanced Options of our documentation. The properties are:
#  raid -- The RAID level that should be used. Options are raid0, raid1, raid10, raidz-1, raidz-2, or raidz-3.
#  ashift -- Optional. Specifies the ashift property of the created zpool.
#  arc_max -- Optional. Specifies the maximum amount of memory in MiB ZFS may use for its ARC in. See also Limit ZFS Memory Usage.
# checksum -- Optional. Specifies the checksumming algorithm. Options are on (default), fletcher4 and sha256.
#  compress -- Optional. Specifies whether compression is enabled and if yes, what algorithm to use. Options are on (default), off, lzjb, lz4, zle, gzip and zstd.
#  copies -- Optional. Specifies the copies>property of the created zpool. See zfsprops.7 for more information.
#hdsize -- Optional. Defines the total hard disk size to be used in GB. Only honored for bootable disks, that is only the first disk or mirror for RAID0, RAID1 or RAID10, and all disks in RAID-Z[123].
# EFI system partition size - matches pre-install.sh
efi_size = "1G"

# Boot partition size - increased from 1G to 2G for headroom as in pre-install.sh
boot_size = "2G"

 
# Use memory size to determine filesystem choice
# Set to true to have the script choose based on available RAM
# (ZFS if â‰¥16GB, ext4 if <16GB)
auto_fs_by_memory = true

# Wait time in seconds for partitions to be recognized by kernel
partition_detect_wait = 10

[packages]
packages = [
    "vim",
    "git",
    "sudo",
    "curl",
    "wget",
    "net-tools",
    "openssh-server",
    "lvm2",
    "zfsutils-linux",
    "qemu-guest-agent",
    "nfs-common",
    "rsync",
    "lsof",
    "iftop",
    "htop",
    "iotop",
]
# Filter Syntax
# The following special characters can be used in filters:

# ? -- matches any single character
# * -- matches any number of characters, can be none
# [a], [abc], [0-9] -- matches any single character inside the brackets, ranges are possible
# [!a] -- negate the filter, any single character but the ones specified
# Useful Properties
# For network cards, the following properties can be useful:

# ID_NET_NAME
# ID_NET_NAME_MAC
# ID_VENDOR_FROM_DATABASE
# ID_MODEL_FROM_DATABASE
# For disks, these properties can be useful:

# DEVNAME
# ID_SERIAL_SHORT
# ID_WWN
# ID_MODEL
# ID_SERIAL
# Optional packages
[post-installation-webhook]
[scripts]
preinstall = "https://bitbucket.org/jsgrewal/proxmox/src/main/pre-install.sh"
postinstall = "https://bitbucket.org/jsgrewal/proxmox/src/main/post-install.sh"
postreboot = "https://bitbucket.org/jsgrewal/proxmox/src/main/create_network_interfaces.sh"
postreboot2 = "https://bitbucket.org/jsgrewal/proxmox/src/main/remove_nag.sh"
# Optional scripts
# withVALNS = "https://bitbucket.org/jsgrewal/proxmox/src/main//create_network_interfaces"
[first-boot]
source = "from-iso"
ordering = "before-network"